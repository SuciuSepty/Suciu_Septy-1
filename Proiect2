import hashlib
import string


def get_hash(password):
    return hashlib.sha256(password.encode()).hexdigest()


target_hash = "0e000d61c1735636f56154f30046be93b3d71f1abbac3cd9e3f80093fdb357ad"

# Seturi de caractere
litere_mari = list(string.ascii_uppercase)
litere_mici = list(string.ascii_lowercase)
numere = list(string.digits)
charactere_speciale = ['!', '@', '#', '$']

recursive_calls = 0


def dfs(parola_curenta, pozitii_ramase, litere_mari_counter, litere_mici_counter, numere_counter,
        charactere_speciale_counter):
    global recursive_calls
    recursive_calls += 1

    if not pozitii_ramase:
        if get_hash(parola_curenta) == target_hash:
            return parola_curenta
        return None

    position = pozitii_ramase[0]
    new_remaining = pozitii_ramase[1:]

    # Încercăm fiecare tip de caracter
    if litere_mari_counter > 0:
        for char in litere_mari:
            new_password = parola_curenta[:position] + char + parola_curenta[position + 1:]
            rezultat = dfs(new_password, new_remaining, litere_mari_counter - 1, litere_mici_counter, numere_counter,
                           charactere_speciale_counter)
            if rezultat:
                return rezultat

    if litere_mici_counter > 0:
        for char in litere_mici:
            new_password = parola_curenta[:position] + char + parola_curenta[position + 1:]
            rezultat = dfs(new_password, new_remaining, litere_mari_counter, litere_mici_counter - 1, numere_counter,
                           charactere_speciale_counter)
            if rezultat:
                return rezultat

    if numere_counter > 0:
        for char in numere:
            new_password = parola_curenta[:position] + char + parola_curenta[position + 1:]
            rezultat = dfs(new_password, new_remaining, litere_mari_counter, litere_mici_counter, numere_counter - 1,
                           charactere_speciale_counter)
            if rezultat:
                return rezultat

    if charactere_speciale_counter > 0:
        for char in charactere_speciale:
            new_password = parola_curenta[:position] + char + parola_curenta[position + 1:]
            rezultat = dfs(new_password, new_remaining, litere_mari_counter, litere_mici_counter, numere_counter,
                           charactere_speciale_counter - 1)
            if rezultat:
                return rezultat

    return None


parola_goala = " " * 6  # Placeholder
positions = list(range(6))

rezultat = dfs(parola_goala, positions, 1, 3, 1, 1)

if rezultat:
    print(f"Parola găsită: {rezultat}")
    print(f"Număr apeluri recursive: {recursive_calls}")
else:
    print("Parola nu a fost găsită.")
